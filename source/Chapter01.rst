 


技术概览

    1.1 CEP介绍 & 解析事件流
    
    Esper引擎的出现是为了满足一些应用需要对事件进行分析和处理的需求。一些典型的例子是：

    业务流程管理和自动化（过程监控，BAM， 异常报告）
    金融应用（算法贸易，诈骗识别，风险控制）
    网络和应用监控（入侵检测，SLA监控）
    网络传感器应用（RFID读取，生产线调度和控制，空中交通管制）

    这些应用都有一个共同的需求，就是要实时或者近实时地处理事件或者信息。有时是要进行复杂事件处理（CEP）和事件流分析。
    满足这类应用的关键因素有吞吐量，延迟以及复杂的逻辑。
    
    高吞吐量-应用要的单位时间处理大量的信息（100k-1,000k/秒）   
    低延迟-应用要实时地处理对应的事件（几毫秒到几秒）   
    复杂计算-应用需要从事件（或事件关联性）检测到所需模式，过滤事件，统计窗口事件的时间和长度，加入事件流，基于缺
    失事件的触发等等。

    Esper引擎就是设计用来简化构建或者扩展这类复杂事件处理应用。
    1.2 CEP与数据库

    1.3 Esper引擎

    1.4 第三方依赖库

